Index: pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: device_safety_info\ndescription: Device Safety Info Flutter Plugin used for checking JailBreak, Rooted Device, Emulator/Simulator, External storage, VPN Detector, Application Update Checker and Screen Lock.\nversion: 0.0.4\nhomepage: https://github.com/devamitkumartiwari/devicesafetyinfo\n\nenvironment:\n  sdk: '>=3.3.4 <4.0.0'\n  flutter: '>=3.3.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n  plugin_platform_interface: ^2.1.8\n  connectivity_plus: ^6.0.2\n  package_info_plus: ^7.0.0\n  http: ^1.2.1\n\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  flutter_lints: ^3.0.2\n\n\n\nflutter:\n\n  plugin:\n    platforms:\n      android:\n        package: com.devamitkumartiwari.device_safety_info\n        pluginClass: DeviceSafetyInfoPlugin\n      ios:\n        pluginClass: DeviceSafetyInfoPlugin\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.yaml b/pubspec.yaml
--- a/pubspec.yaml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/pubspec.yaml	(date 1728359764530)
@@ -4,8 +4,7 @@
 homepage: https://github.com/devamitkumartiwari/devicesafetyinfo
 
 environment:
-  sdk: '>=3.3.4 <4.0.0'
-  flutter: '>=3.3.0'
+  sdk: '>=3.1.0 <4.0.0'
 
 dependencies:
   flutter:
Index: example/pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nname: device_safety_info_example\ndescription: Demonstrates how to use the device_safety_info plugin.\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\n\nenvironment:\n  sdk: '>=3.3.4 <4.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\n  device_safety_info:\n\n    path: ../\n\n\n  cupertino_icons:\n\ndev_dependencies:\n  integration_test:\n    sdk: flutter\n  flutter_test:\n    sdk: flutter\n\n  flutter_lints:\n\nflutter:\n\n  uses-material-design: true\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/pubspec.yaml b/example/pubspec.yaml
--- a/example/pubspec.yaml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/example/pubspec.yaml	(date 1728359764534)
@@ -4,7 +4,7 @@
 publish_to: 'none' # Remove this line if you wish to publish to pub.dev
 
 environment:
-  sdk: '>=3.3.4 <4.0.0'
+  sdk: '>=3.1.0 <4.0.0'
 
 dependencies:
   flutter:
Index: .idea/devicesafetyinfo.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/build\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Flutter Plugins\" level=\"project\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/devicesafetyinfo.iml b/.idea/devicesafetyinfo.iml
--- a/.idea/devicesafetyinfo.iml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/.idea/devicesafetyinfo.iml	(date 1728360830905)
@@ -14,5 +14,6 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="Dart SDK" level="project" />
     <orderEntry type="library" name="Flutter Plugins" level="project" />
+    <orderEntry type="library" name="Dart Packages" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/libraries/Dart_SDK.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\n  <library name=\"Dart SDK\">\n    <CLASSES>\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/async\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/cli\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/collection\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/convert\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/core\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/developer\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/ffi\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/html\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/indexed_db\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/io\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/isolate\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_interop\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_interop_unsafe\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_util\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/math\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/mirrors\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/svg\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/typed_data\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_audio\" />\n      <root url=\"file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_gl\" />\n    </CLASSES>\n    <JAVADOC />\n    <SOURCES />\n  </library>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Dart_SDK.xml b/.idea/libraries/Dart_SDK.xml
--- a/.idea/libraries/Dart_SDK.xml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/.idea/libraries/Dart_SDK.xml	(date 1728355090420)
@@ -1,27 +1,27 @@
 <component name="libraryTable">
   <library name="Dart SDK">
     <CLASSES>
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/async" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/cli" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/collection" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/convert" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/core" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/developer" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/ffi" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/html" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/indexed_db" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/io" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/isolate" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_interop" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_interop_unsafe" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_util" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/math" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/mirrors" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/svg" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/typed_data" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_audio" />
-      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_gl" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/async" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/cli" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/collection" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/convert" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/core" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/developer" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/ffi" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/html" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/indexed_db" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/io" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/isolate" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/js" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/js_interop" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/js_interop_unsafe" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/js_util" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/math" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/mirrors" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/svg" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/typed_data" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/web_audio" />
+      <root url="file://$USER_HOME$/development/flutter/bin/cache/dart-sdk/lib/web_gl" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"io.flutter\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/.idea/misc.xml	(date 1728355090214)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectType">
     <option name="id" value="io.flutter" />
Index: .idea/libraries/Flutter_Plugins.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\n  <library name=\"Flutter Plugins\" type=\"FlutterPluginsLibraryType\">\n    <CLASSES />\n    <JAVADOC />\n    <SOURCES />\n  </library>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Flutter_Plugins.xml b/.idea/libraries/Flutter_Plugins.xml
--- a/.idea/libraries/Flutter_Plugins.xml	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/.idea/libraries/Flutter_Plugins.xml	(date 1728355196635)
@@ -1,6 +1,10 @@
 <component name="libraryTable">
   <library name="Flutter Plugins" type="FlutterPluginsLibraryType">
-    <CLASSES />
+    <CLASSES>
+      <root url="file://$USER_HOME$/.pub-cache/hosted/pub.dev/connectivity_plus-6.0.5" />
+      <root url="file://$USER_HOME$/.pub-cache/hosted/pub.dev/package_info_plus-7.0.0" />
+      <root url="file://$PROJECT_DIR$" />
+    </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
Index: example/lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:io';\n\nimport 'package:device_safety_info/device_safety_info.dart';\nimport 'package:device_safety_info/new_version_check.dart';\nimport 'package:device_safety_info/vpn_check.dart';\nimport 'package:device_safety_info/vpn_state.dart';\nimport 'package:flutter/foundation.dart';\nimport 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatefulWidget {\n  const MyApp({super.key});\n\n  @override\n  _MyAppState createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  bool isRootedDevice = false;\n  bool isScreenLock = false;\n  bool isRealDevice = true;\n  bool isExternalStorage = false;\n  bool isDeveloperMode = false;\n  final vpnCheck = VPNCheck();\n  bool isVPN = false;\n\n  @override\n  void initState() {\n    super.initState();\n    initPlatformState();\n    vpnStatus();\n  }\n\n  Future<void> initPlatformState() async {\n    if (!mounted) return;\n    try {\n      isRootedDevice = await DeviceSafetyInfo.isRootedDevice;\n      isScreenLock = await DeviceSafetyInfo.isScreenLock;\n      isRealDevice = await DeviceSafetyInfo.isRealDevice;\n\n      if (Platform.isAndroid) {\n        isExternalStorage = await DeviceSafetyInfo.isExternalStorage;\n        isDeveloperMode = await DeviceSafetyInfo.isDeveloperMode;\n      }\n    } catch (error) {\n      if (kDebugMode) {\n        print(error);\n      }\n    }\n\n    setState(() {\n      isRootedDevice = isRootedDevice;\n      isScreenLock = isScreenLock;\n      isRealDevice = isRealDevice;\n      isExternalStorage = isExternalStorage;\n      isDeveloperMode = isDeveloperMode;\n      // isVPN = isVPN;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text('Device Safety Info'),\n        ),\n        body: Center(\n          child: Padding(\n            padding: const EdgeInsets.all(8.0),\n            child: ListView(\n              children: [\n                infoTile(\n                    methodRequest: 'isRootedDevice',\n                    methodResponse: isRootedDevice),\n                infoTile(\n                    methodRequest: 'isScreenLock',\n                    methodResponse: isScreenLock),\n                infoTile(\n                    methodRequest: 'isRealDevice',\n                    methodResponse: isRealDevice),\n                infoTile(\n                    methodRequest: 'isExternalStorage',\n                    methodResponse: isExternalStorage),\n                infoTile(\n                    methodRequest: 'isDeveloperMode',\n                    methodResponse: isDeveloperMode),\n                infoTile(methodRequest: 'isVPN', methodResponse: isVPN),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  infoTile({required String methodRequest, required bool methodResponse}) {\n    if (kDebugMode) {\n      print(methodResponse);\n    }\n    return Container(\n      height: 60,\n      width: MediaQuery.of(context).size.width,\n      margin: const EdgeInsets.only(bottom: 10),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.center,\n        crossAxisAlignment: CrossAxisAlignment.center,\n        children: [\n          Text(methodRequest),\n          const SizedBox(\n            width: 10,\n          ),\n          Text(\n            methodResponse ? \"Yes\" : \"No\",\n            style: const TextStyle(fontWeight: FontWeight.w600),\n          ),\n        ],\n      ),\n    );\n  }\n\n  vpnStatus() {\n    vpnCheck.vpnState.listen((state) {\n      if (state == VPNState.connectedState) {\n        if (kDebugMode) {\n          print(\"VPN connected.\");\n        }\n        setState(() {\n          isVPN = true;\n        });\n      } else {\n        if (kDebugMode) {\n          print(\"VPN disconnected.\");\n        }\n        setState(() {\n          isVPN = false;\n        });\n      }\n    });\n  }\n\n  appVersionStatus() {\n    final newVersion = NewVersionChecker(\n      iOSId: '',\n      androidId: '',\n    );\n\n    statusCheck(newVersion);\n  }\n\n  statusCheck(NewVersionChecker newVersion) async {\n    try {\n      final status = await newVersion.getVersionStatus();\n\n      if (status != null) {\n        debugPrint(status.appStoreLink);\n        debugPrint(status.localVersion);\n        debugPrint(status.storeVersion);\n        debugPrint(status.canUpdate.toString());\n\n        if (status.canUpdate) {\n          // new version available\n        }\n      }\n    } catch (e) {\n      if (kDebugMode) {\n        print(e.toString());\n      }\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/lib/main.dart b/example/lib/main.dart
--- a/example/lib/main.dart	(revision 8a128b84396aa4dd8c19731300f60b92294a7af3)
+++ b/example/lib/main.dart	(date 1728360538062)
@@ -13,7 +13,7 @@
   const MyApp({super.key});
 
   @override
-  _MyAppState createState() => _MyAppState();
+  State<MyApp> createState() => _MyAppState();
 }
 
 class _MyAppState extends State<MyApp> {
